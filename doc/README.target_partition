inst_target_partition documentation
-----------------------------------

The inst_target_partition module is resposible for selecting the
partitions to be erased and created.  It needs to create from the current
list of partitions a new list that can be fed to the fdisk agent to create
the new partition layout.

Currently only DOS partition tables are supported.

Data structure
--------------

For the 6.4 YaST2 we must support multiple target disks.
This leads to a new data structure for keeping this data.

In 6.3 YaST2 we had several entries in the user_settings
map (only target disk related entries shown !):

$[
  "diskspace":9006120960,
  "targetbus":"SCSI",
  "targetdevice":"/dev/sda",
  "targetmodules":[],
  "targetname":"IBM DNES-309170W 8.54 GB (1. SCSI)",
  "targetnumber":0,
  "targetpartitions": [ $[ "delete":true, "fsid":130, "fstype":"Linux swap", "nr":1, "region":[0, 17], "type":`primary ]]
  "targetselection": $[ "/dev/sda":$[1:true, 2:true, 3:true, 4:true] ],
  "whole-disk":true
]

For 6.4 YaST2 this will be changed to a single map entry "targets"
with a list of maps. Each map represents a single disk.

$[
  "targets" :
  $[
    "/dev/sda":
    $["bus":"SCSI",					// was: targetbus
      "name":"1. SCSI, 4.6 GB, /dev/sda, IBM DNES-309170W",	// was: targetname
      "module":"aic7xxx",				// was: targetmodules
      "whole":true,					// was:  whole-disk, optional
      "cyl_count":1115,			        // number of cylinder   
      "cyl_size":8224768,				// size of a cylinder in byte
      "vendor":"IBM DNES-309170W",                       // vendor
      "raid" : true,					// true if "p" is to be inserted between raw device (/dev/raid/hda) and partition
      "partitions": []					// was: targetpartitions, see below
     ],
    $[ ]				// next disk device
  ]
]

"targetname" is a user-visible string describing the harddisk. The general layout of
this string is "<n>.<bus>,<size>,<device>,<vendor_and_type>"

The value of "partitions" is a list of maps, one map for each partition.

Some keys in the map are heavily system-dependant (intel, alpha, ppc, sparc)
and therefore are not applicable everywhere.

Mandatory map keys are "fsid", and "nr"


partitions: [

  // old partition, to be re-used

  $[ "delete":true,		    // optional, partition will be deleted in prepdisk
     "fsid":130,		    // optional, partition id (fdisk)
     "fstype":"Linux swap",	    // user-visible string, describing partition id
     "nr":1,			    // partition number, as seen by linux (!)
     "region": [0,17],		    // start and size of region in cylinders
     "use":true,		    // mark as 'used' in inst_target_partition
     "type":`primary		    // optional: partition type for FAT partitions 
  ],				    
				    
  // new partition, to be formatted 
				    
  $[				    
     "create":true,		    // optional, partition will be created by prepdisk
     "fsid":131,		    
     "mount":"/boot",		    // optional, mount-point
     "nr":1,			    
     "format":true,		    // create a filesystem (prepdisk)
     "region":[0, 17],		    
     "type":`primary		    
     "used_fs": `ext2               // type of filesystem: `none, `ext2 or `reiser  
                                    // if it is not used, ext2 is default
   ]

  // existing partition, re-use later (just adds a fstab entry)

  $[
     "fsid":131,
     "mount":"/opt",			// mount-point
     "nr":3
   ]
]

   $[
     "resize"     : true,	// do resize this partition
     "new_size"   : 1000,	// new size is 1000 MB
     "ori_length" : 254,	// ori_length of partition before resize was 254 cyl
     "fsid" : 6,
     "fstype" : "DOS",
     "nr" : 1,
     "region" : [
		 0,
		 242
     ],
     "type" : `primary
   ],

The "region" list has the start cylinder first and the number of cylinders second.

Partition map entries having a "delete":true key will be deleted by prepdisk
Partition map entries having a "create":true key will be created by prepdisk
Others will be left alone


Partition map entries having a "format":true key will be formatted
Others will be left alone


Partition map entries having a "mount":"/xyzzy" key will be entered into fstab,
  mountpoints created, and mounted at start of installation

The "fstype" entry is purely for the user
The "fsid" entry is for fdisk
The "start" and "end" entries are for the partitioner and fdisk

The "type" key classifies the type of the partition:
	`primary	primary FAT partition
	`extended	extended FAT partition
	`logical	logical FAT partition
	`absd		alpha bsd partition
	`sbsd		sparc bsd partition
	`pdisk		apple/ppc pdisk parititon

-------------------------------------------------------------------------
                      --------- LVM: ----
-------------------------------------------------------------------------

  "/dev/system" : $[           <------ Volume Group system
    "cyl_count" : 0,
    "cyl_size" : 4194304,          <- pe-size  
    "is_lvm_vg" : true,
    "name" : "system",
    "partitions" : [           <----- logical volumes 
      $[                     
        "crypt_fs" : false,
        "crypt_key" : "",
        "format" : true,
        "fsid" : 142,
        "fstype" : "LV",
        "mount" : "/usr",
        "nr" : "nameus",
        "region" : [
          0,
          1305
        ],
        "type" : `lvm,
        "use_module" : "lvm_ll",
        "used_fs" : `reiser
      ],
      $[
        "crypt_fs" : true,
        "crypt_key" : "loop_crypt_pw0",
        "format" : true,
        "fsid" : 142,
        "fstype" : "LV",
        "mount" : "/opt",
        "nr" : "nameop",
        "region" : [
          0,
          972
        ],
        "type" : `lvm,
        "use_module" : "lvm_ll",
        "used_fs" : `reiser
      ]
    ]
  ],
  "/dev/sdb" : $[
    "bus" : "SCSI",
    ....
    "partitions" : [
      $[
         ........
      ],
      $[
	"change_fsid" : true,        change fsid from ori_fsid to fsid
        "ori_fsid"    : 131,
        "fsid" : 142,                   physical volume for system
        "fstype" : "Linux LVM",       <------------- 
        "lvm_group" : "system",       <-------------
        "nr" : 8,
        "ori_nr" : 8,
        "region" : [
          1273,
          9869
        ],
        "type" : `logical
      ],
    ],
    "vendor" : "IBM DNES-309170-XEW",
    "whole_disk" : false
  ],

-------------------------------------------------------------------------
                      --------- target modification ----
-------------------------------------------------------------------------
execution stack for partitioning (in 7.1 only used for LVM commands
and fsid change

$[
//   1 : $[                          only for compatibilty reasons, use change_id in target map
//     "disk" : "/dev/sdb",
//     "id" : 142,
//     "nr" : 8,
//     "type" : "change_id", 
//     //-------------------
//     "use_module" : "fdisk_ll"
//   ],

  2 : $[
    "device" : "/dev/sdb8",
    "type" : "create_pv",
    //-------------------
    "use_module" : "lvm_ll"
  ],

  3 : $[
    "devices" : [
      "/dev/sdb8"
    ],
    "pesize" : 4194304,
    "type" : "create_vg",
    //-------------------
    "use_module" : "lvm_ll",
    "vgname" : "system"
  ],

  4 : $[
    "name" : "name_of_lv",
    "size" : 5476083302,          // in Byte
    "stripes" : 1,
    "type" : "create_lv",
    //-------------------
    "use_module" : "lvm_ll",
    "vgname" : "system"
  ],

  5 : $[
    "name" : "name_of_lv",
    "size" : 4080218931,
    "stripes" : 1,
    "type" : "create_lv",
    //-------------------
    "use_module" : "lvm_ll",
    "vgname" : "system"
  ]
]


-------------------------------------------------------------------------
                      --------- R A I D  ----
-------------------------------------------------------------------------

// for every RAID one "partition" in "drive" /dev/md:

$[
  "/dev/md" : $[
    "cyl_count" : 1,                         // typicall 1 
    "cyl_size" : 1048576,                    // const 1MB
    "name" : "Linux Software RAID",
    "partitions" : [
      $[
        "create"     : true, 
        "chunk_size" : "32",
        "fsid" : 131,
        "fstype" : "Linux RAID",
        "nr" : 0,
        "ori_nr" : 0,
        "parity_algorithm" : "left-asymmetric",
        "persistent_superblock" : true,
        "raid_type" : "raid1",
        "region" : [
          0,
          1                                 // valid after partitioning
        ],
        "type" : `sw_raid
      ]
    ]
  ],
  "/dev/sda" : $[
    "cyl_count" : 1115,
    "cyl_size" : 8224768,
    "model" : "DNES-309170W",
    "partitions" : [
      $[
	"change_fsid" : true,               // change fsid from ori_fsid to fsid
        "ori_fsid"    : 131,
        "fsid" : 253,
        "fstype" : "Linux RAID",
        "nr" : 1,
        "old_fsid" : 131,
        "old_fstype" : "Linux native",
        "ori_nr" : 1,
        "raid_name" : "/dev/md0",        <------
        "raid_nb" : "0",                 <------
        "region" : [
          0,
          3
        ],
        "type" : `primary
      ],
      $[
        "fsid" : 130,
        "fstype" : "Linux swap",
        "mount" : "swap",
        "nr" : 2,
        "ori_nr" : 2,
        "region" : [
          3,
          33
        ],
        "type" : `primary
      ],
      $[
        "fsid" : 253,
        "fstype" : "Linux RAID",
        "nr" : 3,
        "old_fsid" : 131,
        "old_fstype" : "Linux native",
        "ori_nr" : 3,
        "raid_name" : "/dev/md0",     <----
        "raid_nb" : "0",              <----
        "raid_type" : "raid",         <----- optional entry, possible
					     value is raid or spare
        "region" : [
          36,
          1079
        ],
        "type" : `primary

-----------

The following keys from the targets map are used:

- "device": the name of the device to be processed
- "name": the decription of the target device
- "is_target": is a current target disk
- "bus": used to decide how many partitions the kernel can handle

The following keys are added to user_settings:

- "diskspace": the size of the root partition
- "whole": whether the whole disk is selected to be used for Linux
- "partitions": the new list of partitions, ready to be fed to the fdisk agent
- "use": updated with the new selection for the current target
  device


Overview
--------

The partition list is first sorted on starting cylinder.  When operating
in automatic mode the list is now examined to find an unused part at the
end of the device that is big enough to hold a minimal installation.  One
of the following conditions must hold to succeed in automatic mode:

- There are no partions at all
- There is an extended partition which has free space at the end that is
  big enough to contain a minimal installation
- There is no extended partition but it can be created, and there is free
  space at the end of the disk that is big enough to contain a minimal
  installation

If none of these conditions are fulfilled or when using the guided
installation mode then the user must select the partitions manually.

The list of partitions is first augmented with descritions for any free
space between the partitions or at the end of the disk.  The a checkbox is
created for every entry.

When the user leaves the dialog the currently checked partitions are
remembered under the "targetselection" key in user_settings.  Then three
lists are created:

- old_partitions: the list of partition that should remain untouched
- selected_partitions: the list of partitions that should be deleted
- all_partitions: the union of the previous two lists

If any logical partition remains then the entry for the extended partition
is added to old_partitions, otherwise it is marked for deletion and added
to selected_partitions.

The list of selected partitions is now checked whether it forms a
contiguous region, if the selected region is big enough for a minimal
installation and whether the partitions for Linux can be created.

The create_partitions macro is responsible for creating new partition
list.  It expects the list of all partitions (including those marked for
deletion) and the selected disk region where the new partitions should be
created, and returns the new partition list.  It processes the partition
list in three steps:

1. Remove the description for the holes (type == `free)
2. Renumber the remaining logical partitions
3. Add the new entries for the Linux partitions, including an extended
partition if needed.

The second step is necessary if any logical partitions are deleted.  The
logical partitions are always numbered consecutively in the order they
were created, independent of the physical order.
